services:
  # PostgreSQL база данных
  db:
    image: postgres:15
    container_name: diplom_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s

  # Redis
  redis:
    image: redis:7-alpine
    container_name: diplom_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PgAdmin - используем отдельный env файл
  pgadmin:
    image: dpage/pgadmin4
    container_name: diplom_pgadmin
    restart: unless-stopped
    env_file:
      - pgadmin.env  # Используем отдельный файл
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  # FastAPI приложение - только нужные переменные
  web:
    build: .
    container_name: diplom_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # ТОЛЬКО переменные которые ожидает ваше приложение
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: uvicorn main:app --host 0.0.0.0 --port 8000

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: